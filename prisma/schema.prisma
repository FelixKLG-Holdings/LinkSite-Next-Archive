generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                    String  @id @default(cuid())
  steamId               String  @unique
  discordId             String? @unique
  oauthToken            String?
  oauthTokenSecret      String?
  expiresAt             Int?
  session               Session[]
  user                  User[]
}

model Session {
  id                String   @id @default(cuid())
  sessionToken      String   @unique
  AccountId         String
  expires           DateTime

  account      Account  @relation(fields: [AccountId], references: [id], onDelete: Cascade)
}

model User {
  id                String      @id @default(cuid())
  AccountId         String
  name              String?
  email             String?     @unique
  blocked           Boolean     @default(false)
  role              Role        @default(USER)
  image             String?
  tickets           Ticket[]
  TicketReplies     TicketReplies[]
  ticketAttachments TicketAttachments[]

  account           Account     @relation(fields: [AccountId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  DEV
  SUPPORT
  USER
}

model Ticket {
  id            String              @id @default(cuid())
  state         State               @default(OPEN)
  hidden        Boolean             @default(false)
  author        String
  addon         String
  title         String
  description   String
  createdAt     DateTime            @default(now())
  latestReply   DateTime?
  replies       TicketReplies[]
  attachments   TicketAttachments[]

  user User @relation(fields: [author], references: [id])
}

enum State {
  OPEN
  CLOSED
  LOCKED
  HOLD
}

model TicketReplies {
  id            String  @id @default(cuid())
  ticketId      String
  deleted       Boolean @default(false)
  author        String
  description   String

  ticket Ticket @relation(fields: [ticketId], references: [id])
  user   User   @relation(fields: [author], references: [id])
}

model TicketAttachments {
  id        String  @id @default(cuid())
  ticketId  String
  author    String
  deleted   Boolean @default(false)
  URL       String

  ticket Ticket @relation(fields: [ticketId], references: [id])
  user   User   @relation(fields: [author], references: [id])
}
